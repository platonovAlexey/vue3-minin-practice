{"remainingRequest":"/Users/alexey/work/vue3-minin-practice/node_modules/babel-loader/lib/index.js!/Users/alexey/work/vue3-minin-practice/src/store/modules/request.module.js","dependencies":[{"path":"/Users/alexey/work/vue3-minin-practice/src/store/modules/request.module.js","mtime":1648659687924},{"path":"/Users/alexey/work/vue3-minin-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alexey/work/vue3-minin-practice/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FsZXhleS93b3JrL3Z1ZTMtbWluaW4tcHJhY3RpY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvYWxleGV5L3dvcmsvdnVlMy1taW5pbi1wcmFjdGljZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICcuLi8uLi9heGlvcy9yZXF1ZXN0JzsKaW1wb3J0IHN0b3JlIGZyb20gJy4uL2luZGV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IGZ1bmN0aW9uIHN0YXRlKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVxdWVzdHM6IFtdCiAgICB9OwogIH0sCiAgZ2V0dGVyczogewogICAgcmVxdWVzdHM6IGZ1bmN0aW9uIHJlcXVlc3RzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5yZXF1ZXN0czsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgc2V0UmVxdWVzdHM6IGZ1bmN0aW9uIHNldFJlcXVlc3RzKHN0YXRlLCByZXF1ZXN0cykgewogICAgICBzdGF0ZS5yZXF1ZXN0cyA9IHJlcXVlc3RzOwogICAgfSwKICAgIGFkZFJlcXVlc3Q6IGZ1bmN0aW9uIGFkZFJlcXVlc3Qoc3RhdGUsIHJlcXVlc3QpIHsKICAgICAgc3RhdGUucmVxdWVzdHMucHVzaChyZXF1ZXN0KTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKF9yZWYsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBkaXNwYXRjaCwgdG9rZW4sIF95aWVsZCRheGlvcyRwb3N0LCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICB0b2tlbiA9IHN0b3JlLmdldHRlcnNbJ2F1dGgvdG9rZW4nXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoIi9yZXF1ZXN0cy5qc29uP2F1dGg9Ii5jb25jYXQodG9rZW4pLCBwYXlsb2FkKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJHBvc3QgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRwb3N0LmRhdGE7CiAgICAgICAgICAgICAgICBjb21taXQoJ2FkZFJlcXVlc3QnLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHBheWxvYWQpLCB7fSwgewogICAgICAgICAgICAgICAgICBpZDogZGF0YS5uYW1lCiAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICBkaXNwYXRjaCgnc2V0TWVzc2FnZScsIHsKICAgICAgICAgICAgICAgICAgdmFsdWU6ICfQl9Cw0Y/QstC60LAg0YPRgdC/0LXRiNC90L4g0YHQvtC30LTQsNC90LAnLAogICAgICAgICAgICAgICAgICB0eXBlOiAncHJpbWFyeScKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBkaXNwYXRjaCgnc2V0TWVzc2FnZScsIHsKICAgICAgICAgICAgICAgICAgdmFsdWU6IF9jb250ZXh0LnQwLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICdkYW5nZXInCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCAxMV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9hZDogZnVuY3Rpb24gbG9hZChfcmVmMikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29tbWl0LCBkaXNwYXRjaCwgdG9rZW4sIF95aWVsZCRheGlvcyRnZXQsIGRhdGEsIHJlcXVlc3RzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYyLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgICAgdG9rZW4gPSBzdG9yZS5nZXR0ZXJzWydhdXRoL3Rva2VuJ107CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCIvcmVxdWVzdHMuanNvbj9hdXRoPSIuY29uY2F0KHRva2VuKSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkZ2V0LmRhdGE7CiAgICAgICAgICAgICAgICByZXF1ZXN0cyA9IE9iamVjdC5rZXlzKGRhdGEpLm1hcChmdW5jdGlvbiAoaWQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGF0YVtpZF0pLCB7fSwgewogICAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOyAvLyDQn9GA0LXQstGA0LDRidCw0LXQvCDQt9Cw0L/RgNC+0YEg0LjQtyBmaXJlYmFzZSDQsiDQvdC+0LLRi9C5INC80LDRgdGB0LjQsiDQvtCx0YrQtdC60YLQvtCyCiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygncmVxdWVzdHMnLCByZXF1ZXN0cykKCiAgICAgICAgICAgICAgICBjb21taXQoJ3NldFJlcXVlc3RzJywgcmVxdWVzdHMpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGRpc3BhdGNoKCdzZXRNZXNzYWdlJywgewogICAgICAgICAgICAgICAgICB2YWx1ZTogX2NvbnRleHQyLnQwLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICdkYW5nZXInCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsb2FkT25lOiBmdW5jdGlvbiBsb2FkT25lKF9yZWYzLCBpZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgY29tbWl0LCBkaXNwYXRjaCwgdG9rZW4sIF95aWVsZCRheGlvcyRnZXQyLCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYzLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICAgICAgdG9rZW4gPSBzdG9yZS5nZXR0ZXJzWydhdXRoL3Rva2VuJ107CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCIvcmVxdWVzdHMvIi5jb25jYXQoaWQsICIuanNvbj9hdXRoPSIpLmNvbmNhdCh0b2tlbikpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfeWllbGQkYXhpb3MkZ2V0MiA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRnZXQyLmRhdGE7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgZGlzcGF0Y2goJ3NldE1lc3NhZ2UnLCB7CiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfY29udGV4dDMudDAubWVzc2FnZSwKICAgICAgICAgICAgICAgICAgdHlwZTogJ2RhbmdlcicKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMSwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/alexey/work/vue3-minin-practice/src/store/modules/request.module.js"],"names":["axios","store","namespaced","state","requests","getters","mutations","setRequests","addRequest","request","push","actions","create","payload","commit","dispatch","token","post","data","id","name","value","type","root","message","load","get","Object","keys","map","loadOne"],"mappings":"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","sourcesContent":["import axios from '../../axios/request'\nimport store from '../index'\n\nexport default {\n  namespaced: true,\n  state() {\n    return {\n      requests: []\n    }\n  },\n  getters: {\n    requests(state) {\n      return state.requests\n    }\n  },\n  mutations: {\n    setRequests(state, requests) {\n      state.requests = requests\n    },\n    addRequest(state, request) {\n      state.requests.push(request)\n    }\n  },\n  actions: {\n    async create({ commit, dispatch }, payload) {\n      try {\n        const token = store.getters['auth/token']\n        const { data } = await axios.post(\n          `/requests.json?auth=${token}`,\n          payload\n        )\n        commit('addRequest', { ...payload, id: data.name })\n        dispatch(\n          'setMessage',\n          {\n            value: 'Заявка успешно создана',\n            type: 'primary'\n          },\n          { root: true }\n        )\n      } catch (e) {\n        dispatch(\n          'setMessage',\n          {\n            value: e.message,\n            type: 'danger'\n          },\n          { root: true }\n        )\n      }\n    },\n    async load({ commit, dispatch }) {\n      try {\n        const token = store.getters['auth/token']\n        const { data } = await axios.get(`/requests.json?auth=${token}`)\n        const requests = Object.keys(data).map(id => ({ ...data[id], id })) // Превращаем запрос из firebase в новый массив объектов\n        // console.log('requests', requests)\n        commit('setRequests', requests)\n      } catch (e) {\n        dispatch(\n          'setMessage',\n          {\n            value: e.message,\n            type: 'danger'\n          },\n          { root: true }\n        )\n      }\n    },\n    async loadOne({ commit, dispatch }, id) {\n      try {\n        const token = store.getters['auth/token']\n        const { data } = await axios.get(`/requests/${id}.json?auth=${token}`)\n        return data\n      } catch (e) {\n        dispatch(\n          'setMessage',\n          {\n            value: e.message,\n            type: 'danger'\n          },\n          { root: true }\n        )\n      }\n    }\n  }\n}\n"]}]}